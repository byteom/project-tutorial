// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A tutorial generator AI agent.
 *
 * - generateTutorial - A function that handles the tutorial generation process.
 * - GenerateTutorialInput - The input type for the generateTutorial function.
 * - GenerateTutorialOutput - The return type for the generateTutorial function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateTutorialInputSchema = z.object({
  prompt: z.string().describe('The prompt to generate a tutorial from.'),
});
export type GenerateTutorialInput = z.infer<typeof GenerateTutorialInputSchema>;

const GenerateTutorialOutputSchema = z.object({
  tutorial: z.string().describe('The generated tutorial.'),
  progress: z.string().describe('A short summary of the generated tutorial.')
});
export type GenerateTutorialOutput = z.infer<typeof GenerateTutorialOutputSchema>;

export async function generateTutorial(input: GenerateTutorialInput): Promise<GenerateTutorialOutput> {
  return generateTutorialFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTutorialPrompt',
  input: {schema: GenerateTutorialInputSchema},
  output: {schema: GenerateTutorialOutputSchema},
  prompt: `You are an expert tutorial generator. You will generate a tutorial from the given prompt.
The tutorial should be well-structured and use Markdown for formatting.

Your response must follow these rules:
1.  The first line must be a single H1 heading (e.g., '# My Awesome Tutorial'). This will be the project title.
2.  The next few lines should be a short, one-paragraph description of the project.
3.  The rest of the content must be a series of steps, each starting with an H2 heading (e.g., '## Step 1: Setting up').
4.  All code snippets must be enclosed in fenced code blocks with the appropriate language identifier (e.g., \`\`\`javascript or \`\`\`bash).

Prompt: {{{prompt}}}`,
});

const generateTutorialFlow = ai.defineFlow(
  {
    name: 'generateTutorialFlow',
    inputSchema: GenerateTutorialInputSchema,
    outputSchema: GenerateTutorialOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return {
      ...output!,
      progress: 'Generated a tutorial from the given prompt.'
    };
  }
);
